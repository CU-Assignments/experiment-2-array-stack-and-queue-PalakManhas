public class JumpGameII {
    public int jump(int[] nums) {
        int n = nums.length;
        if (n <= 1) {
            return 0; // No jumps needed if the array has 0 or 1 element
        }

        int jumps = 0; // Number of jumps
        int currentEnd = 0; // End of the current jump
        int farthest = 0; // Farthest position reachable

        for (int i = 0; i < n - 1; i++) {
            // Update the farthest position reachable
            farthest = Math.max(farthest, i + nums[i]);

            // If we reach the end of the current jump
            if (i == currentEnd) {
                jumps++; // Increment the jump count
                currentEnd = farthest; // Update the end of the current jump

                // If we can reach the last index, return the jump count
                if (currentEnd >= n - 1) {
                    break;
                }
            }
        }

        return jumps;
    }

    public static void main(String[] args) {
        JumpGameII solution = new JumpGameII();
        int[] nums = {2, 3, 1, 1, 4}; // Example input
        int result = solution.jump(nums);
        System.out.println("Minimum number of jumps: " + result); // Output: 2
    }
}
